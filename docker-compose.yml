version: '3.2'


networks:
  traefik-public:
    external: true
    
  agent_network:
    driver: overlay
    attachable: true

volumes:
  portainer_data:

services:
  agent:
    image: portainer/agent:2.25.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network

    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux

  portainer:
    image: portainer/portainer-ce:2.26.1
    command: -H unix:///var/run/docker.sock
    ports:
      - "8000:8000"

      # expose the HTTP port, but remember to keep it blocked on the Firewall. It's useful if traefik is broken and dodges a chicken-and-egg problem.
      - "9000:9000"
      
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    
    networks:
      - agent_network
      - traefik-public
    
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.portainer-data == true

      labels:
        # Frontend
        - traefik.enable=true
        - traefik.constraint-label=traefik-public
        - traefik.docker.network=traefik-public
        - traefik.http.routers.portainer.rule=Host(`${PORTAINER_DOMAIN}`)
        - traefik.http.routers.portainer.entrypoints=websecure
        - traefik.http.routers.portainer.tls.certresolver=le
        - traefik.http.services.portainer.loadbalancer.server.port=9000
